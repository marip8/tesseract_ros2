name: Ubuntu

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 5 * * 6'
  workflow_dispatch:
  release:
    types:
      - released

jobs:
  industrial_ci:
    name: ${{ matrix.distro }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro: [foxy, humble, rolling]
    env:
      CCACHE_DIR: ${{ github.workspace }}/${{ matrix.distro }}/.ccache
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      PUSH_DOCKER_IMAGE: ${{ github.ref == 'refs/heads/master' || github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v1

      - name: Free Disk Space
        continue-on-error: true
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        continue-on-error: true
        uses: actions/cache@v1.1.0
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ matrix.distro }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ env.matrix.distro }}-ccache-

      - name: Login to Github container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker meta-information
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            prefix=
            suffix=
          tags: |
            type=ref,event=branch,prefix=${{ matrix.distro }}-
            type=semver,pattern={{major}}.{{minor}},prefix=${{ matrix.distro }}-

      - name: Set build type
        run: |
          if [[ "${{ env.PUSH_DOCKER_IMAGE }}" = true ]]
          then
            echo "BUILD_TYPE=Release" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=Debug" >> $GITHUB_ENV
          fi

      - uses: 'tesseract-robotics/industrial_ci@0109bf3523050402490b56e19c9554e7d7c5379f'
        env:
          ROS_DISTRO: ${{ matrix.distro }}
          ROS_REPO: main
          UPSTREAM_WORKSPACE: 'dependencies.repos'
          ROSDEP_SKIP_KEYS: "catkin taskflow fcl gz-common5 gz-math7 gz-rendering7 qt_advanced_docking"
          PARALLEL_TESTS: false
          NOT_TEST_BUILD: true
          BASEDIR: /opt
          PREFIX: ${{ github.repository }}_
          UPSTREAM_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release -DBUILD_RENDERING=OFF -DBUILD_STUDIO=OFF"
          TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}"
          BEFORE_RUN_TARGET_TEST_EMBED: "source ${BASEDIR}/${PREFIX}target_ws/install/local_setup.bash"
          AFTER_SCRIPT: 'rm -r ${BASEDIR}/${PREFIX}upstream_ws/build ${BASEDIR}/${PREFIX}target_ws/build'
          DOCKER_COMMIT: ${{ steps.meta.outputs.tags }}

      - name: Push post-build Docker
        if: ${{ env.PUSH_DOCKER_IMAGE == 'true' }}
        run: docker push ${{ steps.meta.outputs.tags }}
